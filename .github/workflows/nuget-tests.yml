# This script tags the current commit, and builds a release package
name: pack-push-data-nuget-test
run-name: Build, Pack and Push Data Nuget from `test` for ${{ github.event_name }} triggered by ${{ github.triggering_actor }}
concurrency:
  group: test-nuget

on:
  push:
    branches:
      - develop
      - main
  workflow_dispatch:

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GIT_TAG_VERSION_PREFIX: data-nuget.
    steps:
      - name: Init the Repo
        id: init-the-repo
        shell: bash
        run: |
          git config --global init.defaultBranch main
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git init

      # get the latest code from the repo
      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@v4

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: ${{ github.ref }}
          prefix: ${{ env.GIT_TAG_VERSION_PREFIX }}
          patchAll: true
          skipInvalidTags: true
          noVersionBumpBehavior: patch

      - name: get output values
        id: get-semver-outputs
        shell: bash
        run: |
          echo "Current: ${{ steps.semver.outputs.current }}"
          echo "Next: ${{ steps.semver.outputs.next }}"
          echo "NextStrict: ${{ steps.semver.outputs.nextStrict }}"
          echo "NextMajor: ${{ steps.semver.outputs.nextMajor }}"
          echo "Bump: ${{ steps.semver.outputs.bump }}"
          echo "Nuget Version: workflow-tests.nuget1.${{ steps.semver.outputs.next }}-preview"
          set next_version=${{ steps.semver.outputs.next }}
          echo "set NEXT_VERSION_NUMBER=next_version.remove('${{ env.GIT_TAG_VERSION_PREFIX }}')" >> $GITHUB_OUTPUT

      - name: get output values
        id: get-version-outputs
        shell: bash
        run: |
          echo "output: ${{ steps.get-semver-outputs.outputs.NEXT_VERSION_NUMBER }}"

      # tag the nuget version
      - name: Tag the Repo
        id: tag-the-repo
        shell: bash
        run: |
          git tag -m "tagging the nuget version" ${{ steps.semver.outputs.next }} ${{ github.ref }}

      # # build the solution, so the pack has fresh DLLs
      # - name: dotnet build
      #   run: |
      #     ~/.dotnet/dotnet build . --configuration Debug /p:AssemblyVersion=${{ steps.semver.outputs.next }} /p:Version=${{ steps.semver.outputs.next }}

    #   - name: dotnet pack and push data
    #     run: |
    #       cd ${{ steps.get-sln-path.outputs.sln-path }}/src/acnicholls-identity.data
    #       ~/.dotnet/dotnet pack . --configuration Debug
    #       ~/.dotnet/dotnet nuget push "bin/Debug/acnicholls-identity.data.${{ steps.semver.outputs.nextStrict }}-preview.nupkg" \
    #       --api-key ${{ secrets.GITHUB_TOKEN }} \
    #       --source "github" \
    #       --skip-duplicate
